# NOTE: Make sure command-line xcode-select is pointing to the correct compiler:
# `xcode-select -p` to print the current compiler
# OR
# `xcode-select -s
# carthage bootstrap --no-use-binaries --cache-builds --platform ios
# or (beware!)
# carthage update [RepositoryName] --no-use-binaries --cache-builds --platform ios
#
# NOTE: Carthage hanging: try to run:
# `rm -rf ~/Library/Caches/org.carthage.CarthageKit; rm -rf ~/Library/Caches/carthage`
# NOTE: AWS optimization. AWS builds over 30 frameworks that take > 30 minutes.
# == SOLUTION: (Ignore warnings issued by the find command)
# carthage checkout
# OR
# carthage update --no-build --new-resolver --verbose
# THEN
# find ./Carthage/Checkouts/aws-sdk-ios/AWSiOSSDKv2.xcodeproj/xcshareddata/xcschemes ! -name "AWSCore.xcscheme" ! -name "AWSS3.xcscheme" -delete
# find ./Carthage/Checkouts/aws-sdk-ios/AWSAuthSDK/AWSAuthSDK.xcodeproj/xcshareddata/xcschemes ! -name "AWSAuthCore.xcscheme" -delete
# carthage build --platform iOS --cache-builds
# ==
#
github "onevcat/Kingfisher"
github "Quick/Quick"
github "Quick/Nimble"